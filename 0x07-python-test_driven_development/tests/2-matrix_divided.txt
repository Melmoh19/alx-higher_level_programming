>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
>>> matrix_divided([[1, 2, 3], [4, 5]], 0)
Traceback (most recent call last):
	...
ZeroDivisionError: division by zero
>>> matrix_divided([[1, 2, 3], [4, 5]], 4)
Traceback (most recent call last):
	...
TypeError: Each row of the matrix must have the same size
>>> matrix_divided([1, 2, 3], 4)
Traceback (most recent call last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided([[1, 2, "home"],[1, 3, 5]], 4)
Traceback (most recent call last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided([1, 2, "home"],4)
Traceback (most recent call last):
        ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided(None, 4)
Traceback (most recent call last):
        ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided([[1, 2, 8], [1, 3, 5]],"div")
Traceback (most recent call last):
        ...
TypeError: div must be a number
>>> matrix_divided([[1, 2, 8], [1, 3, 5]], None)
Traceback (most recent call last):
	...
TypeError: div must be a number
